--- ../src-base/minecraft/net/minecraft/creativetab/CreativeTabs.java
+++ ../src-work/minecraft/net/minecraft/creativetab/CreativeTabs.java
@@ -79,7 +79,7 @@
         {
             return new ItemStack(Items.field_151036_c);
         }
-    }).func_111229_a(new EnumEnchantmentType[] {EnumEnchantmentType.ALL, EnumEnchantmentType.DIGGER, EnumEnchantmentType.FISHING_ROD, EnumEnchantmentType.BREAKABLE});
+    }).func_111229_a(EnumEnchantmentType.ALL, EnumEnchantmentType.DIGGER, EnumEnchantmentType.FISHING_ROD, EnumEnchantmentType.BREAKABLE);
     public static final CreativeTabs field_78037_j = (new CreativeTabs(9, "combat")
     {
         @SideOnly(Side.CLIENT)
@@ -87,7 +87,7 @@
         {
             return new ItemStack(Items.field_151010_B);
         }
-    }).func_111229_a(new EnumEnchantmentType[] {EnumEnchantmentType.ALL, EnumEnchantmentType.ARMOR, EnumEnchantmentType.ARMOR_FEET, EnumEnchantmentType.ARMOR_HEAD, EnumEnchantmentType.ARMOR_LEGS, EnumEnchantmentType.ARMOR_CHEST, EnumEnchantmentType.BOW, EnumEnchantmentType.WEAPON, EnumEnchantmentType.WEARABLE, EnumEnchantmentType.BREAKABLE});
+    }).func_111229_a(EnumEnchantmentType.ALL, EnumEnchantmentType.ARMOR, EnumEnchantmentType.ARMOR_FEET, EnumEnchantmentType.ARMOR_HEAD, EnumEnchantmentType.ARMOR_LEGS, EnumEnchantmentType.ARMOR_CHEST, EnumEnchantmentType.BOW, EnumEnchantmentType.WEAPON, EnumEnchantmentType.WEARABLE, EnumEnchantmentType.BREAKABLE);
     public static final CreativeTabs field_78038_k = new CreativeTabs(10, "brewing")
     {
         @SideOnly(Side.CLIENT)
@@ -102,7 +102,7 @@
         @SideOnly(Side.CLIENT)
         public ItemStack func_78016_d()
         {
-            return new ItemStack(Blocks.field_150342_X);
+            return new ItemStack(Blocks.OAK_BOOKSHELF);
         }
         @SideOnly(Side.CLIENT)
         public void func_78018_a(NonNullList<ItemStack> p_78018_1_)
@@ -120,7 +120,7 @@
         @SideOnly(Side.CLIENT)
         public ItemStack func_78016_d()
         {
-            return new ItemStack(Item.func_150898_a(Blocks.field_150486_ae));
+            return new ItemStack(Item.func_150898_a(Blocks.OAK_CHEST));
         }
     }).func_78025_a("inventory.png").func_78022_j().func_78014_h();
     private final int field_78033_n;
@@ -131,8 +131,22 @@
     private EnumEnchantmentType[] field_111230_s = new EnumEnchantmentType[0];
     private ItemStack field_151245_t;
 
+    public CreativeTabs(String label)
+    {
+        this(getNextID(), label);
+    }
+
     public CreativeTabs(int p_i1853_1_, String p_i1853_2_)
     {
+        if (p_i1853_1_ >= field_78032_a.length)
+        {
+            CreativeTabs[] tmp = new CreativeTabs[p_i1853_1_ + 1];
+            for (int x = 0; x < field_78032_a.length; x++)
+            {
+                tmp[x] = field_78032_a[x];
+            }
+            field_78032_a = tmp;
+        }
         this.field_78033_n = p_i1853_1_;
         this.field_78034_o = p_i1853_2_;
         this.field_151245_t = ItemStack.field_190927_a;
@@ -210,12 +224,20 @@
     @SideOnly(Side.CLIENT)
     public int func_78020_k()
     {
+        if (field_78033_n > 11)
+        {
+            return ((field_78033_n - 12) % 10) % 5;
+        }
         return this.field_78033_n % 6;
     }
 
     @SideOnly(Side.CLIENT)
     public boolean func_78023_l()
     {
+        if (field_78033_n > 11)
+        {
+            return ((field_78033_n - 12) % 10) < 5;
+        }
         return this.field_78033_n < 6;
     }
 
@@ -260,4 +282,39 @@
             item.func_150895_a(this, p_78018_1_);
         }
     }
+
+    public int getTabPage()
+    {
+        if (field_78033_n > 11)
+        {
+            return ((field_78033_n - 12) / 10) + 1;
+        }
+        return 0;
+    }
+
+    public static int getNextID()
+    {
+        return field_78032_a.length;
+    }
+
+    /**
+     * Determines if the search bar should be shown for this tab.
+     *
+     * @return True to show the bar
+     */
+    public boolean hasSearchBar()
+    {
+        return field_78033_n == CreativeTabs.field_78027_g.field_78033_n;
+    }
+
+    /**
+     * Gets the width of the search bar of the creative tab, use this if your
+     * creative tab name overflows together with a custom texture.
+     *
+     * @return The width of the search bar, 89 by default
+     */
+    public int getSearchbarWidth()
+    {
+        return 89;
+    }
 }
